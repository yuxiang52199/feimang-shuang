<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.feimang.userstudy.dao.BooktagRelationMapper" >
  <resultMap id="BaseResultMap" type="com.feimang.userstudy.pojo.BooktagRelation" >
    <constructor >
      <idArg column="ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="UTID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Fromuid" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="BookID" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="CreateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="TagBookSeq" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, UTID,Fromuid, BookID, CreateTime, TagBookSeq
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fm_booktag_relation
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fm_booktag_relation
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.feimang.userstudy.pojo.BooktagRelation" >
    insert into fm_booktag_relation (ID, UTID, Fromuid,BookID,
      CreateTime, TagBookSeq)
    values (#{id,jdbcType=INTEGER}, #{utid,jdbcType=INTEGER},#{fromuid,jdbcType=BIGINT} #{bookid,jdbcType=BIGINT},
      #{createtime,jdbcType=TIMESTAMP}, #{tagbookseq,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.feimang.userstudy.pojo.BooktagRelation" >
    insert into fm_booktag_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="utid != null" >
        UTID,
      </if>
      <if test="fromuid != null" >
        Fromuid,
      </if>
      <if test="bookid != null" >
        BookID,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="tagbookseq != null" >
        TagBookSeq,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="utid != null" >
        #{utid,jdbcType=INTEGER},
      </if>
      <if test="fromuid != null" >
        #{fromuid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        #{bookid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="tagbookseq != null" >
        #{tagbookseq,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.feimang.userstudy.pojo.BooktagRelation" >
    update fm_booktag_relation
    <set >
      <if test="utid != null" >
        UTID = #{utid,jdbcType=INTEGER},
      </if>
      <if test="fromuid != null" >
        Fromuid = #{fromuid,jdbcType=BIGINT},
      </if>
      <if test="bookid != null" >
        BookID = #{bookid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="tagbookseq != null" >
        TagBookSeq = #{tagbookseq,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.feimang.userstudy.pojo.BooktagRelation" >
    update fm_booktag_relation
    set UTID = #{utid,jdbcType=INTEGER},
    Fromuid = #{fromuid,jdbcType=BIGINT},
      BookID = #{bookid,jdbcType=BIGINT},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      TagBookSeq = #{tagbookseq,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getBooksByUTID" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM fm_booktag_relation
    WHERE UTID = #{utid}
    and Fromuid = #{userId}
  </select>
  <delete id="delBookByUserIdAndId" parameterType="list">
    DELETE FROM
    fm_booktag_relation WHERE id IN
    <foreach collection="booktagRelationList" item="item" open="(" separator="," close=")" index="index">
      #{item.id}
    </foreach>
  </delete>
  <insert id="addBookToBookTag" parameterType="list">
    replace INTO  fm_booktag_relation(Fromuid,UTID,BookID) VALUES
    <foreach collection="booktagRelations" item="item" index="index" separator=",">
      (
      #{item.fromuid},
      #{item.utid},
      #{item.bookid}
      )
    </foreach>
  </insert>
  <insert id="checkBookRelation" parameterType="map" statementType="CALLABLE">
    <!--<foreach collection="booktagRelationList" item="item" index="index">-->


        call check_book_relation(
         #{bookid},
         #{fromuid}
      )

    <!--</foreach>-->
  </insert>
  <update id="editBookSeq" parameterType="list">
    update fm_booktag_relation
    set TagBookSeq =
    <foreach collection="booktagRelationList" item="item" index="index" >
      #{item.tagbookseq}
    </foreach>
    where id IN
    <foreach collection="booktagRelationList" item="item" index="index" open="(" separator="," close=")">
      #{item.id}
    </foreach>
  </update>
</mapper>